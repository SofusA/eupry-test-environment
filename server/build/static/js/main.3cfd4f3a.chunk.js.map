{"version":3,"sources":["static/eupry_LOGO.svg","components/Navigation.jsx","components/Footer.jsx","static/url.js","components/Locations.jsx","components/Location.jsx","components/Login.jsx","components/datepicker.js","components/linechart.js","components/settingsButton.js","components/alarmConfig.js","components/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","Navbar","expand","className","Nav","to","style","textShadow","backgroundImage","src","logo","alt","width","Button","href","target","rel","size","Footer","url","App","handleClick","console","log","state","ID","data","getData","URL","axios","get","then","res","setState","catch","error","history","push","window","localStorage","getItem","this","locations","locationRender","location","Col","variant","type","onClick","id","name","Container","Breadcrumb","Item","active","Row","React","Component","AppWithRouter","loc","split","profileURL","locationURL","locName","profiles","profileRender","profile","Card","Header","email","password","login","handleInputChange","event","value","handleSubmit","preventDefault","setItem","alert","Body","Title","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","DatepickerComponent","focused","changeDate","amount","unit","handler","time","end","add","start","handleChange","dayshift","moment","diff","ref","createRef","CustomDateInput","forwardRef","format","selected","valueOf","customInput","filterDate","date","isSame","generateAxis","series","Object","entries","devices","key","device","temperature","probe","humidity","v","j","temp","x","y","length","device_name","device_id","shadow_id","parseInt","min","min_v","max","max_v","mean","mean_v","source","p","ext","min_p","max_p","mean_p","h","humid","min_h","max_h","mean_h","sortedSeries","normal","CO2","status","shadow","serie","options","chart","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","initialAnimation","height","toolbar","show","tools","selection","zoom","pan","zoomin","zoomout","reset","xaxis","labels","datetimeUTC","tooltip","stroke","curve","legend","title","formatter","seriesName","object","seriesIndex","yaxis","parseFloat","toFixed","graph","diffPressure","mgraph","prevProps","equal","lg","SettingsButton","shadows","setSettings","loadSettings","getUrl","pro","parsedData","JSON","parse","replaceAll","handleUnitCheckboxes","newCheckState","stateChange","types","keys","crawlType","stringify","collectDataloggers","map","datalogger","index","checked","popover","Popover","as","Content","Table","striped","OverlayTrigger","trigger","placement","overlay","alarmConfig","config","configuration","values","forEach","method","qs","headers","attributes","alarmtype","alarmRender","hum","alarmunit","crit_high","high","crit_low","low","humid_crit_high","humid_high","humid_crit_low","humid_low","colSpan","includes","hours","minutes","seconds","updater","empty","query","retrieveUrls","proName","unix","button","nextUpload","dateHandler","settingsHandler","settings","thisType","i","nextupload","Infinity","next_update","fromNow","path","exact","component","Locations","Login","Location","Profile","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iNAAe,MAA0B,uC,2CC8B1BA,mBAtBf,SAAoBC,GAClB,OACE,8BAEI,eAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,UAAU,0BAA9B,UAEE,cAACC,EAAA,EAAD,CAAKD,UAAU,UAAf,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,WAAW,OAASC,gBAAgB,QAA1D,SACE,qBAAKC,IAAKC,EAAMC,IAAI,GAAGC,MAAM,gBAInC,eAACC,EAAA,EAAD,CAAQC,KAAK,2BAA2BC,OAAO,SAASC,IAAI,sBAA5D,2BAAgG,cAAC,IAAD,CAAcC,KAAM,gBCL/GC,I,6FCdXC,EAAM,6BCMJC,E,4MAEJC,YAAc,WACZC,QAAQC,IAAI,EAAKC,Q,EAGnBA,MAAQ,CACNC,GAAI,KACJC,KAAM,I,EAeRC,QAAU,WAER,IAAIC,EAAMT,EACVS,EAAMA,EAAM,2BAA6B,EAAKJ,MAAMC,GACpDI,IAAMC,IAAIF,GACPG,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZP,KAAMM,EAAIN,UAGbQ,OAAM,SAAAC,GACLb,QAAQC,IAAI,SACZ,EAAKvB,MAAMoC,QAAQC,KAAK,e,uDAxB9B,WAAqB,IAAD,OACd,qBAAOC,QAA0BC,aAAaC,QAAQ,MACxDC,KAAKR,SAAS,CACZR,GAAIc,aAAaC,QAAQ,QACxB,WACD,EAAKb,aAGPc,KAAKzC,MAAMoC,QAAQC,KAAK,Y,oBAoB5B,WAAU,IAAD,SACDK,EAAYD,KAAKjB,MAAME,KACvBiB,EAAiB,GAFhB,cAGcD,GAHd,yBAGEE,EAHF,QAILD,EAAeN,KACb,cAACQ,EAAA,EAAD,CAAK1C,UAAU,gBAAf,SACE,cAACU,EAAA,EAAD,CAAQiC,QAAQ,QAAQC,KAAK,SAASC,QAAS,WAAQ,EAAKhD,MAAMoC,QAAQC,KAAK,aAAeO,EAASK,KAAO9C,UAAU,2BAAxH,SACGyC,EAASM,QAFsB,iBAAmBN,EAASK,MAFpE,2BAAiC,IAH1B,8BAYP,OACE,eAACE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAWC,KAAZ,CAAiBC,QAAM,EAAvB,0BAGF,cAACC,EAAA,EAAD,CAAKpD,UAAU,4BAAf,SACE,cAACoD,EAAA,EAAD,CAAKpD,UAAU,0BAAf,SAA0CwC,a,GA1DpCa,IAAMC,WAkETC,EADO3D,YAAWqB,G,SCjE3BA,E,4MAEJI,MAAQ,CACNC,GAAI,KACJC,KAAM,I,EAeRC,QAAU,WACR,IAAIgC,EAAMrB,OAAOM,SAAS9B,KAC1B6C,EAAMA,EAAIC,MAAM,KAAK,GACrB,EAAK3B,SAAS,CACZ0B,IAAKA,IAGP,IAAI/B,EAAMT,EACN0C,EAAajC,EAAM,wBAA0B+B,EAAM,WAAa,EAAKnC,MAAMC,GAC3EqC,EAAclC,EAAM,wBAA0B+B,EAAM,OAAS,EAAKnC,MAAMC,GAE5EI,IAAMC,IAAI+B,GACP9B,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZP,KAAMM,EAAIN,UAGbQ,OAAM,SAAAC,GACL,EAAKnC,MAAMoC,QAAQC,KAAK,cAI5BR,IAAMC,IAAIgC,GACP/B,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZ8B,QAAS/B,EAAIN,KAAKwB,UAGrBhB,OAAM,SAAAC,GACLb,QAAQC,IAAIY,O,EAIlBd,YAAc,WACZC,QAAQC,IAAI,EAAKC,Q,uDA9CnB,WAAqB,IAAD,OACd,qBAAOc,QAA0BC,aAAaC,QAAQ,MACxDC,KAAKR,SAAS,CACZR,GAAIc,aAAaC,QAAQ,QACxB,WACD,EAAKb,aAGPc,KAAKzC,MAAMoC,QAAQC,KAAK,a,oBAyC5B,WAAU,IAAD,SACD2B,EAAWvB,KAAKjB,MAAME,KACtBuC,EAAgB,GAFf,cAGaD,GAHb,yBAGEE,EAHF,QAILD,EAAc5B,KACZ,cAACQ,EAAA,EAAD,CAAK1C,UAAU,gBAAf,SACE,cAACU,EAAA,EAAD,CAAQiC,QAAQ,QAAQC,KAAK,SAASC,QAAS,WAAQ,EAAKhD,MAAMoC,QAAQC,KAAK,gBAAkB,EAAKb,MAAMmC,IAAM,QAAUO,EAAQjB,KAAO9C,UAAU,2BAArJ,SACG+D,EAAQhB,QAFuB,gBAAkBgB,EAAQjB,MAFlE,2BAA+B,IAHxB,8BAYP,OACE,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAWC,KAAZ,CAAiBL,QAAS,WAAQ,EAAKhD,MAAMoC,QAAQC,KAAK,MAA1D,yBACA,eAACe,EAAA,EAAWC,KAAZ,CAAiBC,QAAM,EAAvB,cAA0Bb,KAAKjB,MAAMuC,QAArC,UAGF,qBAAK5D,UAAWsC,KAAKjB,MAAMC,GAAK,UAAY,WAA5C,SACE,cAAC8B,EAAA,EAAD,CAAKpD,UAAU,4BAAf,SACE,cAACgE,EAAA,EAAD,CAAMhE,UAAU,cAAcG,MAAO,CAAEM,MAAO,SAA9C,SACE,cAACuD,EAAA,EAAKC,OAAN,kCAIN,qBAAKjE,UAAWsC,KAAKjB,MAAMC,GAAK,YAAc,SAA9C,SACE,8BACE,cAAC8B,EAAA,EAAD,CAAKpD,UAAU,4BAAf,SACE,cAACoD,EAAA,EAAD,CAAKpD,UAAU,0BAAf,SAA0C8D,iB,GArFtCT,IAAMC,WA+FTC,EADO3D,YAAWqB,G,iBC9F3BA,E,4MAEFI,MAAQ,CACJ6C,MAAO,GACPC,SAAU,GACVC,OAAO,EACPtB,GAAI,G,EAGRuB,kBAAoB,SAAAC,GAChB,IAAM1D,EAAS0D,EAAM1D,OACf2D,EAAQ3D,EAAO2D,MACfxB,EAAOnC,EAAOmC,KACpB,EAAKjB,SAAL,eACKiB,EAAOwB,K,EAGhBC,aAAe,SAAAF,GACXA,EAAMG,iBACN,IAAIhD,EAAMT,EAEVS,EAAMA,EAAM,oBAAsB,EAAKJ,MAAM6C,MAAQ,aAAe,EAAK7C,MAAM8C,SAC/EzC,IAAMC,IAAIF,GACTG,MAAK,SAAAC,GACF,IAAMN,EAAOM,EAAIN,KACjB,EAAKO,SAAS,CACVsC,OAAO,EACP9C,GAAIC,EAAKuB,KAEXV,aAAasC,QAAQ,KAAMnD,EAAKuB,IAEhC,EAAKjD,MAAMoC,QAAQC,KAAK,QAE7BH,OAAM,SAAAC,GACHb,QAAQC,IAAIY,GACZ2C,MAAM,8BAGVxD,QAAQC,IAAI,mCAAqCK,I,4CAIrD,WACI,OACI,8BACI,cAACuB,EAAA,EAAD,UACI,cAACI,EAAA,EAAD,CAAKpD,UAAU,kCAAf,SACI,cAACgE,EAAA,EAAD,CAAMhE,UAAU,YAAYG,MAAO,CAAEM,MAAO,SAA5C,SACI,eAACuD,EAAA,EAAKY,KAAN,WACI,cAACZ,EAAA,EAAKa,MAAN,oBACA,eAACC,EAAA,EAAD,CAAMC,SAAUzC,KAAKkC,aAArB,UACI,eAACM,EAAA,EAAKE,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcvC,KAAK,QAAQwC,YAAY,cAAcrC,KAAK,QAAQwB,MAAOjC,KAAKjB,MAAM6C,MAAOmB,SAAU/C,KAAK+B,uBAG9G,eAACS,EAAA,EAAKE,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcvC,KAAK,WAAWwC,YAAY,WAAWrC,KAAK,WAAWwB,MAAOjC,KAAKjB,MAAM8C,SAAUkB,SAAU/C,KAAK+B,uBAEpH,cAAC3D,EAAA,EAAD,CAAQiC,QAAQ,UAAUC,KAAK,SAA/B,sC,GA5DlBS,IAAMC,WA0ETC,EADO3D,YAAWqB,G,mCCzEZqE,G,mNACjBjE,MAAQ,CACJkE,QAAS,M,EAGbrE,YAAc,WACVC,QAAQC,IAAI,EAAKvB,OACjBsB,QAAQC,IAAI,EAAKC,Q,EAGrBmE,WAAa,SAACC,EAAQC,GAClB,EAAK7F,MAAM8F,QAAQ,EAAK9F,MAAM+F,KAAKC,IAAIC,IAAIL,EAAQC,GAAO,EAAK7F,MAAM+F,KAAKG,MAAMD,IAAIL,EAAQC,K,EAGhGM,aAAe,SAAA1B,GACX,IAAI2B,EAAWC,IAAO5B,GAAO6B,KAAK,EAAKtG,MAAM+F,KAAKG,MAAO,QACzD,EAAKP,WAAWS,EAAU,S,4CAG9B,WAAU,IAAD,OACCG,EAAM/C,IAAMgD,YACZC,EAAkBC,sBAAW,WAAqBH,GAArB,IAAGvD,EAAH,EAAGA,QAAS0B,EAAZ,EAAYA,MAAZ,OAC/B,eAAC7D,EAAA,EAAD,CAAQiC,QAAQ,OAAOE,QAASA,EAAS0B,MAAOA,EAAOc,SAAUxC,EAASuD,IAAKA,EAAKpG,UAAU,YAA9F,UACK,EAAKH,MAAM+F,KAAKG,MAAMS,OAAO,QADlC,IAC2C,uBACtC,EAAK3G,MAAM+F,KAAKG,MAAMS,OAAO,sBAKtC,OACI,8BAEQ,eAACpD,EAAA,EAAD,CAAKpD,UAAU,iCAAf,UAEQ,cAACU,EAAA,EAAD,CAAQmC,QAAS,kBAAM,EAAK2C,YAAY,EAAG,SAASxF,UAAU,YAAY2C,QAAQ,OAAlF,oBAKA,cAAC,IAAD,CACI8D,SAAUnE,KAAKzC,MAAM+F,KAAKG,MAAMW,UAChCrB,SAAU/C,KAAK0D,aACfW,YAAa,cAACL,EAAD,CAAiBF,IAAKA,IACnCQ,WAAc,SAACC,GACX,OAAOX,MAAWW,KAI1B,cAACnG,EAAA,EAAD,CAAQmC,QAAS,kBAAM,EAAK2C,WAAW,EAAG,SAASxF,UAAYsC,KAAKzC,MAAM+F,KAAKG,MAAMe,OAAOZ,MAAU,OAAuB,YAAd,YAA2BvD,QAAQ,OAAlJ,6B,GAhDqBW,c,0CCoYlCrC,E,4MAjYXC,YAAc,WACVC,QAAQC,IAAI,EAAKC,Q,EAgBrB0F,aAAe,SAACxF,GAIZ,IAFA,IAAIyF,EAAS,GAEb,MAA4BC,OAAOC,QAAQ3F,EAAK4F,SAAhD,eAA0D,CAAC,IAAD,wBAA9CC,EAA8C,KAAzCC,EAAyC,KAElDC,EAAc,GACdC,EAAQ,GACRC,EAAW,GAJuC,cAO9BH,EAAOI,EAAEP,WAPqB,IAOtD,2BAA4C,CAAC,IAAD,yBAAhCQ,EAAgC,KAA7BC,EAA6B,KACpCA,GAAQL,EAAYpF,KAAK,CAAE0F,EAAkB,IAAfrG,EAAKqE,KAAK8B,GAAWG,EAAGF,KARR,8BAUlDL,EAAYQ,OAAS,GACrBd,EAAO9E,KACH,CACI6F,YAAaV,EAAOtE,KACpBiF,UAAWX,EAAOW,UAClBC,UAAWC,SAASd,GACpBe,IAAKd,EAAOe,MACZC,IAAKhB,EAAOiB,MACZC,KAAMlB,EAAOmB,OACbC,OAAQ,cACRlH,KAAM+F,IApBoC,oBA0B/BD,EAAOqB,EAAExB,WA1BsB,IA0BtD,2BAA2C,CAAC,IAAD,yBAA/BQ,EAA+B,KAA5BiB,EAA4B,KACnCA,GAAOpB,EAAMrF,KAAK,CAAE0F,EAAkB,IAAfrG,EAAKqE,KAAK8B,GAAWG,EAAGc,KA3BD,8BA6BlDpB,EAAMO,OAAS,GACfd,EAAO9E,KACH,CACI6F,YAAaV,EAAOtE,KACpBiF,UAAWX,EAAOW,UAClBC,UAAWC,SAASd,GACpBe,IAAKd,EAAOuB,MACZP,IAAKhB,EAAOwB,MACZN,KAAMlB,EAAOyB,OACbL,OAAQ,WACRlH,KAAMgG,IAvCoC,oBA6C7BF,EAAO0B,EAAE7B,WA7CoB,IA6CtD,2BAA6C,CAAC,IAAD,yBAAjCQ,EAAiC,KAA9BsB,EAA8B,KACrCA,GAASxB,EAAStF,KAAK,CAAE0F,EAAkB,IAAfrG,EAAKqE,KAAK8B,GAAWG,EAAGmB,KA9CN,8BAgDlDxB,EAASM,OAAS,GAClBd,EAAO9E,KACH,CACI6F,YAAaV,EAAOtE,KACpBiF,UAAWX,EAAOW,UAClBC,UAAWC,SAASd,GACpBe,IAAKd,EAAO4B,MACZZ,IAAKhB,EAAO6B,MACZX,KAAMlB,EAAO8B,OACbV,OAAQ,WACRlH,KAAMiG,IAOtB,IAAI4B,EAAe,CAAEC,OAAQ,GAAIC,IAAK,GAAI9B,SAAU,IACpD,GAAI,EAAK3H,MAAM0J,OAAQ,CAAC,IAAD,gBACE,EAAK1J,MAAM0J,QADb,IACnB,2BAAwC,CAAC,IAA9BC,EAA6B,QACpC,GAAoB,WAAhBA,EAAO5G,KAAmB,CAAC,IAAD,gBACNoE,GADM,IAC1B,2BAA4B,CAAC,IAAlByC,EAAiB,QACpBD,EAAOvB,YAAcwB,EAAMxB,YACN,gBAAjBwB,EAAMhB,QACNW,EAAaC,OAAOnH,KAAKuH,GAER,aAAjBA,EAAMhB,QACNW,EAAaC,OAAOnH,KAAKuH,GAER,aAAjBA,EAAMhB,QACNW,EAAa5B,SAAStF,KAAKuH,KAVb,+BAe9B,GAAoB,aAAhBD,EAAO5G,KAAqB,CAAC,IAAD,gBACRoE,GADQ,IAC5B,2BAA4B,CAAC,IAAlByC,EAAiB,QACpBD,EAAOvB,YAAcwB,EAAMxB,YACN,gBAAjBwB,EAAMhB,QACNW,EAAaC,OAAOnH,KAAKuH,GAER,aAAjBA,EAAMhB,QACNW,EAAa5B,SAAStF,KAAKuH,GAEV,aAAjBA,EAAMhB,QACNW,EAAa5B,SAAStF,KAAKuH,KAVX,+BAehC,GAAoB,QAAhBD,EAAO5G,KAAgB,CAAC,IAAD,gBACHoE,GADG,IACvB,2BAA4B,CAAC,IAAlByC,EAAiB,QACpBD,EAAOvB,YAAcwB,EAAMxB,YACN,gBAAjBwB,EAAMhB,QACNW,EAAaC,OAAOnH,KAAKuH,GAER,aAAjBA,EAAMhB,QACNW,EAAaE,IAAIpH,KAAKuH,GAEL,aAAjBA,EAAMhB,QACNW,EAAa5B,SAAStF,KAAKuH,KAVhB,iCAhCZ,+BAkDvB,EAAK3H,SAAS,CACVkF,OAAQA,EACRoC,aAAcA,K,EAKtB/H,MAAQ,CACJgI,OAAQ,CACJK,QAAS,CACLC,MAAO,CACHC,WAAY,CACRC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CACdH,SAAS,EACTI,MAAO,KAEXC,iBAAkB,CACdL,SAAS,EACTE,MAAO,KAEXI,iBAAkB,CACdN,SAAS,IAGjBO,OAAQ,IACR3J,MAAO,OACP4J,QAAS,CACLC,MAAM,EACNC,MAAO,CACHC,WAAW,EACXC,MAAM,EACNC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAO,KAInBC,MAAO,CACHlI,KAAM,WACNmI,OAAQ,CACJC,aAAa,GAEjBC,QAAS,CACLpB,SAAS,IAGjBqB,OAAQ,CACJzK,MAAO,EACP0K,MAAO,UAEXC,OAAQ,CACJd,MAAM,GAEVW,QAAS,CACLrD,EAAG,CACCpB,OAAQ,qBAEZqB,EAAG,CACCwD,MAAO,CACHC,UAAW,SAACC,EAAYC,GAAb,OAAwB,EAAKnK,MAAM2F,OAAOwE,EAAOC,aAAa1D,kBAM7FuB,IAAK,CACDI,QAAS,CACLC,MAAO,CACHC,WAAY,CACRC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CACdH,SAAS,EACTI,MAAO,KAEXC,iBAAkB,CACdL,SAAS,EACTE,MAAO,KAEXI,iBAAkB,CACdN,SAAS,IAGjBO,OAAQ,IACR3J,MAAO,OACP4J,QAAS,CACLC,MAAM,EACNC,MAAO,CACHC,WAAW,EACXC,MAAM,EACNC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAO,KAInBC,MAAO,CACHlI,KAAM,WACNmI,OAAQ,CACJC,aAAa,GAEjBC,QAAS,CACLpB,SAAS,IAGjB6B,MAAO,CACHX,OAAQ,CACJO,UAAW,SAAC/G,GACR,OAAOoH,WAAWpH,EAAMqH,QAAQ,IAAM,QAIlDV,OAAQ,CACJzK,MAAO,EACP0K,MAAO,UAEXC,OAAQ,CACJd,MAAM,GAEVW,QAAS,CACLrD,EAAG,CACCpB,OAAQ,qBAEZqB,EAAG,CACCwD,MAAO,CACHC,UAAW,SAACC,EAAYC,GAAb,OAAwB,EAAK3L,MAAMgM,MAAMvC,IAAIkC,EAAOC,aAAa1D,kBAMhG+D,aAAc,CACVpC,QAAS,CACLC,MAAO,CACHC,WAAY,CACRC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CACdH,SAAS,EACTI,MAAO,KAEXC,iBAAkB,CACdL,SAAS,EACTE,MAAO,KAEXI,iBAAkB,CACdN,SAAS,IAGjBO,OAAQ,IACR3J,MAAO,OACP4J,QAAS,CACLC,MAAM,EACNC,MAAO,CACHC,WAAW,EACXC,MAAM,EACNC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAO,KAInBC,MAAO,CACHlI,KAAM,WACNmI,OAAQ,CACJC,aAAa,GAEjBC,QAAS,CACLpB,SAAS,IAGjB6B,MAAO,CACHX,OAAQ,CACJO,UAAW,SAAC/G,GACR,OAAOoH,WAAWpH,EAAMqH,QAAQ,IAAM,SAIlDV,OAAQ,CACJzK,MAAO,EACP0K,MAAO,UAEXC,OAAQ,CACJd,MAAM,GAEVW,QAAS,CACLrD,EAAG,CACCpB,OAAQ,qBAEZqB,EAAG,CACCwD,MAAO,CACHC,UAAW,SAACC,EAAYC,GAAb,OAAwB,EAAK3L,MAAM0B,KAAKsK,MAAML,EAAOC,aAAa1D,mB,uDA5UrG,WACqC,OAA7BzF,KAAKzC,MAAMkM,OAAOxC,QAClBjH,KAAKyE,aAAazE,KAAKzC,MAAMkM,U,gCAIrC,SAAmBC,GACVC,IAAM3J,KAAKzC,MAAOmM,IACnB1J,KAAKyE,aAAazE,KAAKzC,MAAMkM,U,oBA4UrC,WACI,OACI,eAAC3I,EAAA,EAAD,WAGI,cAACV,EAAA,EAAD,CAAKwJ,GAAI,GAAIlM,UAAWsC,KAAKjB,MAAM+H,cAAgB9G,KAAKjB,MAAM+H,aAAaC,OAAOvB,OAAS,EAAI,KAAO,SAAtG,SACI,eAAC9D,EAAA,EAAD,CAAMhE,UAAU,OAAhB,UACI,cAACgE,EAAA,EAAKC,OAAN,2BACA,cAACD,EAAA,EAAKY,KAAN,UAEKtC,KAAKjB,MAAM+H,aAAe,cAAC,IAAD,CAAOM,QAASpH,KAAKjB,MAAMgI,OAAOK,QAAS1C,OAAQ1E,KAAKjB,MAAM+H,aAAaC,OAAQe,OAAQ,MAAU,YAO5I,cAAC1H,EAAA,EAAD,CAAKwJ,GAAI,GAAIlM,UAAWsC,KAAKjB,MAAM+H,cAAgB9G,KAAKjB,MAAM+H,aAAaE,IAAIxB,OAAS,EAAI,KAAO,SAAnG,SACI,eAAC9D,EAAA,EAAD,CAAMhE,UAAU,OAAhB,UACI,cAACgE,EAAA,EAAKC,OAAN,mBACA,cAACD,EAAA,EAAKY,KAAN,UACKtC,KAAKjB,MAAM+H,aAAe,cAAC,IAAD,CAAOM,QAASpH,KAAKjB,MAAMgI,OAAOK,QAAS1C,OAAQ1E,KAAKjB,MAAM+H,aAAaE,IAAKc,OAAQ,MAAU,YAKzI,cAAC1H,EAAA,EAAD,CAAKwJ,GAAI,GAAIlM,UAAWsC,KAAKjB,MAAM+H,cAAgB9G,KAAKjB,MAAM+H,aAAa5B,SAASM,OAAS,EAAI,KAAO,SAAxG,SACI,eAAC9D,EAAA,EAAD,CAAMhE,UAAU,OAAhB,UACI,cAACgE,EAAA,EAAKC,OAAN,wBACA,cAACD,EAAA,EAAKY,KAAN,UACKtC,KAAKjB,MAAM+H,aAAe,cAAC,IAAD,CAAOM,QAASpH,KAAKjB,MAAMgI,OAAOK,QAAS1C,OAAQ1E,KAAKjB,MAAM+H,aAAa5B,SAAU4C,OAAQ,MAAU,mB,GAvX5I/G,IAAMC,W,4CCFH6I,E,4MAEjB9K,MAAQ,CACJ+K,QAAS,I,EAObC,YAAc,SAAC7C,GAEX,EAAK1H,SAAS,CACVsK,QAAQ,2BACD,EAAK/K,MAAM+K,SADX,kBAEF5C,EAJI,CAAEH,QAAQ,EAAMC,KAAK,EAAO9B,UAAU,Q,EASvD8E,aAAe,WAAO,IAAD,gBACI,EAAKzM,MAAM0J,QADf,yBACNC,EADM,QAET+C,EAASvL,EAAM,wBAA0B,EAAKnB,MAAM2D,IAAM,SAAW,EAAK3D,MAAM2M,IAAM,WAAahD,EAAOvB,UAC9GvG,IAAMC,IAAI4K,GACL3K,MAAK,SAAAC,GACF,GAAwB,IAApBA,EAAIN,KAAKuG,OACT,EAAKuE,YAAY7C,EAAOvB,eACrB,CACH,IAAMwE,EAAaC,KAAKC,MAAM9K,EAAIN,KAAKqL,WAAW,IAAK,MACvD,EAAK/M,MAAM8F,QAAQ6D,EAAOvB,UAAWwE,GACrC,EAAK3K,SAAS,CACVsK,QAAQ,2BACD,EAAK/K,MAAM+K,SADX,kBAEF5C,EAAOvB,UAAYwE,UAKnC1K,OAAM,SAAAC,GACHb,QAAQC,IAAIY,OAlBxB,2BAAyC,IADxB,gC,EAiCrB6K,qBAAuB,SAAC5E,EAAWrF,GAC/B,IAAMkK,GAAiB,EAAKzL,MAAM+K,QAAQnE,GAAWrF,GAC/CmK,EAAc,EAAK1L,MAAM+K,QAAQnE,GAEvC8E,EAAYnK,GAAQkK,EAEpB,IAAIE,EAAQ/F,OAAOgG,KAAKF,GACxB,IAAsB,IAAlBD,EAAwB,CAAC,IAAD,gBACFE,GADE,IACxB,2BAA6B,CAAC,IAArBE,EAAoB,QACrBA,IAActK,IACdmK,EAAYG,IAAa,IAHT,oCAOxBH,EAAY1D,QAAS,EAGzB,GAAa,WAATzG,IAAuC,IAAlBkK,OAElB,CACH,IAAIP,EAASvL,oBACC,EAAKnB,MAAM2D,IACrB,QAAU,EAAK3D,MAAM2M,IACrB,WAAavE,EACb,SAAWyE,KAAKS,UAAUJ,GAE9BrL,IAAMC,IAAI4K,GACL3K,MAAK,SAAAC,GACF,EAAKhC,MAAM8F,QAAQsC,EAAW8E,GAC9B,EAAKjL,SAAS,CACVsK,QAAQ,2BACD,EAAK/K,MAAM+K,SADX,kBAEFnE,EAAY8E,SAIxBhL,OAAM,SAAAC,GACHb,QAAQC,IAAIY,Q,EAK5Bd,YAAc,WACVC,QAAQC,IAAI,EAAKC,Q,EAGrB+L,mBAAqB,WACjB,GAAI,EAAK/L,MAAM+K,QACX,OAAO,EAAKvM,MAAM0J,OAAO8D,KAAI,SAACC,EAAYC,GACtC,OACI,+BACI,6BAAKD,EAAWvF,cACd,EAAK1G,MAAM+K,QAAQkB,EAAWrF,WAAoB,6BAAI,uBAAOrF,KAAK,WAAW4K,QAAS,EAAKnM,MAAM+K,QAAQkB,EAAWrF,WAAWoB,OAAQvG,GAAIwK,EAAWvF,YAAc,UAAW1C,SAAU,SAAAf,GAAK,OAAI,EAAKuI,qBAAqBS,EAAWrF,UAAW,eAAvM,KAC3C,EAAK5G,MAAM+K,QAAQkB,EAAWrF,WAAoB,6BAAI,uBAAOrF,KAAK,WAAW4K,QAAS,EAAKnM,MAAM+K,QAAQkB,EAAWrF,WAAWT,SAAU1E,GAAIwK,EAAWvF,YAAc,WAAY1C,SAAU,SAAAf,GAAK,OAAI,EAAKuI,qBAAqBS,EAAWrF,UAAW,iBAA1M,KAC3C,EAAK5G,MAAM+K,QAAQkB,EAAWrF,WAAoB,6BAAI,uBAAOrF,KAAK,WAAW4K,QAAS,EAAKnM,MAAM+K,QAAQkB,EAAWrF,WAAWqB,IAAKxG,GAAIwK,EAAWvF,YAAc,OAAQ1C,SAAU,SAAAf,GAAK,OAAI,EAAKuI,qBAAqBS,EAAWrF,UAAW,YAAjM,OAJxC,iBAAmBqF,EAAWrF,e,uDAjGvD,WACI3F,KAAKgK,iB,gCAwCT,SAAmBN,GACVC,IAAM3J,KAAKzC,MAAOmM,IACnB1J,KAAKgK,iB,oBAmEb,WACI,IAAMmB,EACF,eAACC,EAAA,EAAD,CAAS5K,GAAG,gBAAgBrC,MAAO,IAAnC,UACI,cAACiN,EAAA,EAAQ7I,MAAT,CAAe8I,GAAG,KAAlB,sBACA,cAACD,EAAA,EAAQE,QAAT,UACI,eAACC,EAAA,EAAD,CAAOC,SAAO,EAAC9N,UAAU,cAAzB,UACI,gCACI,+BACI,wCACA,6CACA,0CACA,0CAGR,gCACKsC,KAAK8K,+BAO1B,OACI,+BAII,cAACW,EAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,SAASC,QAAST,EAA5D,SACI,cAAC/M,EAAA,EAAD,CAAQiC,QAAQ,OAAhB,SAAuB,cAAC,IAAD,CAAU7B,KAAM,e,GAhJfwC,a,oDCGvB6K,G,4MAEjB9M,MAAQ,G,EAORiL,aAAe,WACX,IADiB,EACbU,EAAQ,GADK,cAEI,EAAKnN,MAAM0J,QAFf,IAEjB,2BAAwC,CAAC,IAA9BC,EAA6B,QAChC4E,EAAS5E,EAAO6E,cACpBD,EAAOnG,UAAYuB,EAAOvB,UAE1BmG,EAAOxL,KAAO4G,EAAO5G,KAErBwL,EAAOrG,YAAcyB,EAAOzB,YAC5BiF,EAAM9K,KAAKsH,EAAO5G,MAClB,EAAKd,SAAL,eACK0H,EAAOvB,UAAYmG,KAXX,8BAejB,EAAKtM,SAAS,CACVkL,MAAOA,K,EAUfX,YAAc,WACVpF,OAAOqH,OAAO,EAAKjN,OAAOkN,SAAQ,SAAA/E,GAC9B,IAAI+C,EAASvL,EAAM,kBACf,EAAKnB,MAAM2D,IACX,IAAM,EAAK3D,MAAM2M,IACjB,IAAMhD,EAAOvB,UACb,IAAM,EAAKpI,MAAMiD,GAErBpB,IAAM,CACF8M,OAAQ,OACRxN,IAAKuL,EACLhL,KAAMkN,KAAGtB,UAAU3D,GACnBkF,QAAS,CACL,eAAgB,qDAGnB9M,MAAK,SAAAC,GACF,IAAMN,EAAOM,EAAIN,KACjBJ,QAAQC,IAAIG,MAEfQ,OAAM,SAAAC,GACHb,QAAQC,IAAIY,GACZ,EAAKnC,MAAMoC,QAAQC,KAAK,kB,EAOxC8D,aAAe,SAAC1B,GACZ,IAAMkF,EAASlF,EAAM1D,OAAO+N,WAAWnF,OAAOjF,MACxCA,EAAQD,EAAM1D,OAAO2D,MAErB3B,EAAO0B,EAAM1D,OAAO+N,WAAWC,UAAUrK,MAE/C,EAAKzC,SAAL,eACK0H,EADL,2BAEW,EAAKnI,MAAMmI,IAFtB,kBAGS5G,EAAO2B,O,EAOpBrD,YAAc,WACVC,QAAQC,IAAI,EAAKC,Q,uDA5ErB,WACIiB,KAAKgK,iB,gCAuBT,SAAmBN,GACVC,KAAM3J,KAAKzC,MAAOmM,IACnB1J,KAAKgK,iB,oBAsDb,WAAU,IAAD,OACCF,EAAU9J,KAAKjB,MACfwN,EAAc,CAChBlH,KAAM,GACNmH,IAAK,GACLxF,IAAK,IAGTrC,OAAOqH,OAAOlC,GAASmC,SAAQ,SAAA/E,GACP,WAAhBA,EAAO5G,MAAqC,aAAhB4G,EAAO5G,MACnCiM,EAAYlH,KAAKzF,KACb,+BACI,6BAAKsH,EAAOzB,cACZ,6BAAI,uBAAOyB,OAAQA,EAAOvB,UAAW8G,UAAU,OAAOH,UAAU,YAAYvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAW+G,cAChL,6BAAI,uBAAOxF,OAAQA,EAAOvB,UAAW8G,UAAU,OAAOH,UAAU,OAAOvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWgH,SAC3K,6BAAI,uBAAOzF,OAAQA,EAAOvB,UAAW8G,UAAU,OAAOH,UAAU,WAAWvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWiH,aAC/K,6BAAI,uBAAO1F,OAAQA,EAAOvB,UAAW8G,UAAU,OAAOH,UAAU,MAAMvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWkH,UALrK,kBAAoB3F,EAAOvB,YASxB,aAAhBuB,EAAO5G,MAAuC,QAAhB4G,EAAO5G,MACrCiM,EAAYC,IAAI5M,KACZ,+BACI,6BAAKsH,EAAOzB,cACZ,6BAAI,uBAAOyB,OAAQA,EAAOvB,UAAW8G,UAAU,MAAMH,UAAU,kBAAkBvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWmH,oBACrL,6BAAI,uBAAO5F,OAAQA,EAAOvB,UAAW8G,UAAU,MAAMH,UAAU,aAAavJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWoH,eAChL,6BAAI,uBAAO7F,OAAQA,EAAOvB,UAAW8G,UAAU,MAAMH,UAAU,iBAAiBvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWqH,mBACpL,6BAAI,uBAAO9F,OAAQA,EAAOvB,UAAW8G,UAAU,MAAMH,UAAU,YAAYvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWsH,gBAL1K,iBAAmB/F,EAAOvB,YASvB,QAAhBuB,EAAO5G,MACPiM,EAAYvF,IAAIpH,KACZ,+BACI,6BAAKsH,EAAOzB,cACZ,6BAAI,uBAAOyB,OAAQA,EAAOvB,UAAW8G,UAAU,MAAMH,UAAU,YAAYvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAW+G,cAC/K,6BAAI,uBAAOxF,OAAQA,EAAOvB,UAAW8G,UAAU,MAAMH,UAAU,OAAOvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWgH,SAC1K,6BAAI,uBAAOzF,OAAQA,EAAOvB,UAAW8G,UAAU,MAAMH,UAAU,WAAWvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWiH,aAC9K,6BAAI,uBAAO1F,OAAQA,EAAOvB,UAAW8G,UAAU,MAAMH,UAAU,MAAMvJ,SAAU,EAAKW,aAAchG,UAAU,aAAa4C,KAAK,OAAO2B,MAAO,EAAKlD,MAAMmI,EAAOvB,WAAWkH,UALpK,iBAAmB3F,EAAOvB,eAY/C,IAAMwF,EACF,eAACC,EAAA,EAAD,CAAS5K,GAAG,gBAAgBrC,MAAO,IAAnC,UACI,cAACiN,EAAA,EAAQ7I,MAAT,CAAe8I,GAAG,KAAlB,iCACA,eAACD,EAAA,EAAQE,QAAT,WACI,eAACC,EAAA,EAAD,CAAOC,SAAO,EAAC9N,UAAU,cAAzB,UACI,kCACI,6BACI,oBAAIwP,QAAQ,IAAZ,0BAEJ,+BACI,uBACA,+CACA,sCACA,8CACA,2CAGR,gCACKX,EAAYlH,OAGjB,wBAAO3H,UAAWsC,KAAKjB,MAAM2L,OAAS1K,KAAKjB,MAAM2L,MAAMyC,SAAS,YAAc,KAAO,SAArF,UACI,6BACI,oBAAID,QAAQ,IAAZ,wBAEJ,+BACI,uBACA,+CACA,sCACA,8CACA,2CAGR,gCACKX,EAAYC,MAEjB,wBAAO9O,UAAWsC,KAAKjB,MAAM2L,OAAS1K,KAAKjB,MAAM2L,MAAMyC,SAAS,OAAS,KAAO,SAAhF,UACI,6BACI,oBAAID,QAAQ,IAAZ,mBAEJ,+BACI,uBACA,+CACA,sCACA,8CACA,2CAGR,gCACKX,EAAYvF,SAGrB,cAAC5I,EAAA,EAAD,CAAQmC,QAASP,KAAK+J,YAAtB,0BAKZ,OACI,+BAKI,cAAC0B,EAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,SAASC,QAAST,EAA5D,SACI,cAAC/M,EAAA,EAAD,CAAQiC,QAAQ,OAAhB,SAAuB,cAAC,KAAD,CAAM7B,KAAM,e,GAlMdwC,aCMnCrC,G,4MACFI,MAAQ,CACJuE,KAAM,CACFG,MAAOG,MAASwJ,MAAM,GAAGC,QAAQ,GAAGC,QAAQ,GAC5C/J,IAAKK,MAASwJ,MAAM,GAAGC,QAAQ,GAAGC,QAAQ,GAAG9J,IAAI,GAAI,UAEzD+J,QAAS,EACTC,OAAO,G,EAGX5O,YAAc,WACVC,QAAQC,IAAI,EAAKC,Q,EAgBrBG,QAAU,WACN,IAAIuO,EAAQ5N,OAAOM,SAAS9B,KAExB6C,GADJuM,EAAQA,EAAMtM,MAAM,KAAK,IACTA,MAAM,KAAK,GAAGA,MAAM,KAAK,GACrC+I,EAAMuD,EAAMtM,MAAM,KAAK,GAAGA,MAAM,KAAK,GAEzC,EAAK3B,SAAS,CACV+N,QAAS,EAAKxO,MAAMwO,QAAQ,EAC5BrM,IAAKA,EACLgJ,IAAKA,IAGT,IAAMwD,EAAe,CACjBpM,QAAS5C,EAAM,wBAA0BwC,EAAM,OAAS,EAAKnC,MAAMC,GACnE2O,QAASjP,EAAM,wBAA0BwC,EAAM,QAAUgJ,EAAM,OAAS,EAAKnL,MAAMC,GACnFqD,MAAO3D,EAAM,wBAA0BwC,EAAM,QAAUgJ,EAAM,gBAAkB,EAAKnL,MAAMuE,KAAKG,MAAMmK,OAAS,QAAU,EAAK7O,MAAMuE,KAAKC,IAAIqK,OAAS,OAAS,EAAK7O,MAAMC,GACzK8M,OAAQpN,EAAM,wBAA0BwC,EAAM,QAAUgJ,EAAM,iBAAmB,EAAKnL,MAAMuE,KAAKG,MAAMmK,OAAS,QAAU,EAAK7O,MAAMuE,KAAKC,IAAIqK,OAAS,OAAS,EAAK7O,MAAMC,GAC3KiI,OAAQvI,EAAM,wBAA0BwC,EAAM,QAAUgJ,EAAM,iBAAmB,EAAKnL,MAAMuE,KAAKG,MAAMmK,OAAS,QAAU,EAAK7O,MAAMuE,KAAKC,IAAIqK,OAAS,OAAS,EAAK7O,MAAMC,GAC3K6O,OAAQnP,EAAM,wBAA0BwC,EAAM,QAAUgJ,EAAM,iBAAmB,EAAKnL,MAAMuE,KAAKG,MAAMmK,OAAS,QAAU,EAAK7O,MAAMuE,KAAKC,IAAIqK,OAAS,OAAS,EAAK7O,MAAMC,GAC3KyK,OAAQ/K,EAAM,wBAA0BwC,EAAM,QAAUgJ,EAAM,wBAA0B,EAAKnL,MAAMuE,KAAKG,MAAMmK,OAAS,QAAU,EAAK7O,MAAMuE,KAAKC,IAAIqK,OAAS,OAAS,EAAK7O,MAAMC,IAnB1K,WAsBD8F,GACP1F,IAAMC,IAAIqO,EAAa5I,IAClBxF,MAAK,SAAAC,GACF,IAAMN,EAAOM,EAAIN,KACjB,EAAKO,SAAL,eACKsF,EAAM7F,IACR,WACC,GAAY,WAAR6F,EAAkB,CAClB,EAAKgJ,WAAW7O,GADE,oBAECA,GAFD,IAElB,2BAAyB,SACdqB,KAAO,UAHA,8BAMdrB,EAAKuG,OAAS,GACd,EAAKhG,SAAS,CACV+N,QAAS,EAAKxO,MAAMwO,QAAQ,EAC5BC,OAAO,WAO1B/N,OAAM,SAAAC,GACHb,QAAQC,IAAIY,GACZ,EAAKnC,MAAMoC,QAAQC,KAAK,eAzBpC,IAAK,IAAMkF,KAAO4I,EAAe,EAAtB5I,I,EA+BfiJ,YAAc,SAACxK,EAAKE,GAChB,EAAKjE,SAAS,CACV8D,KAAM,CACFG,MAAOA,EACPF,IAAKA,KAEV,WACC,EAAKrE,c,EAIb8O,gBAAkB,SAACrI,EAAWsI,GAK1B,IAJA,IAAIhH,EAAS,EAAKlI,MAAMkI,OAEpB3G,EAAO,SAEX,MAHYqE,OAAOgG,KAAKsD,GAGxB,eAA4B,CAAvB,IAAIC,EAAQ,KACTD,EAASC,KACT5N,EAAO4N,GAKf,IAAK,IAAIC,KAAKlH,EACNA,EAAOkH,GAAGxI,YAAcA,IACxBsB,EAAOkH,GAAG7N,KAAOA,GAIzB,EAAKd,SAAS,CACVyH,OAAQA,EACRsG,QAAS,EAAKxO,MAAMwO,QAAQ,K,EAIpCO,WAAa,SAAC7O,GACV,IADmB,EACfmP,EAAaC,IADE,cAGEpP,GAHF,IAGnB,2BAA2B,CAAC,IAAjB8F,EAAgB,QACnBA,EAAOuJ,YAAcF,IACrBA,EAAarJ,EAAOuJ,cALT,8BASnB,EAAK9O,SAAS,CACV4O,WAAYxK,IAAOgK,KAAKQ,GAAYG,a,uDA/G5C,WAAqB,IAAD,OACZ,qBAAO1O,QAA0BC,aAAaC,QAAQ,MACtDC,KAAKR,SAAS,CACVR,GAAIc,aAAaC,QAAQ,QAC1B,WACC,EAAKb,aAITc,KAAKzC,MAAMoC,QAAQC,KAAK,a,oBA2GhC,WAAU,IAAD,OACL,OACI,eAACc,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,UACI,cAACV,EAAA,EAAD,UACI,eAACO,EAAA,EAAD,WACI,cAACA,EAAA,EAAWC,KAAZ,CAAiBL,QAAS,WAAQ,EAAKhD,MAAMoC,QAAQC,KAAK,MAA1D,yBACCI,KAAKjB,MAAMuC,QAAU,eAACX,EAAA,EAAWC,KAAZ,CAAiBL,QAAS,WAAQ,EAAKhD,MAAMoC,QAAQC,KAAK,aAAe,EAAKb,MAAMmC,MAApF,cAA8FlB,KAAKjB,MAAMuC,QAAQb,KAAjH,OAA4I,KACjKT,KAAKjB,MAAM4O,QAAU,eAAChN,EAAA,EAAWC,KAAZ,CAAiBC,QAAM,EAAvB,cAA0Bb,KAAKjB,MAAM4O,QAAQlN,KAA7C,OAAwE,YAK1G,cAACK,EAAA,EAAD,UACI,eAACV,EAAA,EAAD,WACI,cAAC,EAAD,CAAqBiD,QAASrD,KAAK+N,YAAazK,KAAMtD,KAAKjB,MAAMuE,OACjE,wBAAO5F,UAAU,iBAAjB,yBACiBsC,KAAKjB,MAAMqP,WAD5B,QAC4C,yCAEvCpO,KAAKjB,MAAMmC,KAAOlB,KAAKjB,MAAMmL,KAAOlK,KAAKjB,MAAMkI,OAAS,cAAC,EAAD,CAAgB/F,IAAKlB,KAAKjB,MAAMmC,IAAKgJ,IAAKlK,KAAKjB,MAAMmL,IAAKjD,OAAQjH,KAAKjB,MAAMkI,OAAQ5D,QAASrD,KAAKgO,kBAAsB,KACjLhO,KAAKjB,MAAMkI,OAAS,cAAC,GAAD,CAAazG,GAAIR,KAAKjB,MAAMC,GAAIkC,IAAKlB,KAAKjB,MAAMmC,IAAKgJ,IAAKlK,KAAKjB,MAAMmL,IAAKqD,QAAWvN,KAAKjB,MAAMwO,QAAStG,OAAQjH,KAAKjB,MAAMkI,SAAa,aAMzKjH,KAAKjB,MAAM0K,SAA+B,IAArBzJ,KAAKjB,MAAMyO,MAAiB,cAAC,EAAD,CAAW/D,OAAQzJ,KAAKjB,MAAM0K,OAAQxC,OAAQjH,KAAKjB,MAAMkI,OAAQ3D,KAAMtD,KAAKjB,MAAMuE,KAAMiK,QAAWvN,KAAKjB,MAAMwO,UAAc,4C,GA5J5KxM,IAAMC,WAoKTC,GADO3D,YAAWqB,I,OC7JlBA,OAjBf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8Q,KAAK,IAAIC,OAAK,EAACC,UAAW,kBAAM,cAACC,EAAD,OACvC,cAAC,IAAD,CAAOH,KAAK,SAASC,OAAK,EAACC,UAAW,kBAAM,cAACE,EAAD,OAC5C,cAAC,IAAD,CAAOJ,KAAK,YAAYC,OAAK,EAACC,UAAW,kBAAM,cAACG,EAAD,OAC/C,cAAC,IAAD,CAAOL,KAAK,WAAWC,OAAK,EAACC,UAAW,kBAAM,cAACI,GAAD,gBCHpCC,QACW,cAA7BlP,OAAOM,SAAS6O,UAEe,UAA7BnP,OAAOM,SAAS6O,UAEhBnP,OAAOM,SAAS6O,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlQ,MAAK,SAAAmQ,GACjCA,EAAaC,kB","file":"static/js/main.3cfd4f3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eupry_LOGO.5c8f32b5.svg\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport logo from '../static/eupry_LOGO.svg'\n\nimport { ExternalLink } from 'react-feather';\nimport { Nav, Navbar, Button } from 'react-bootstrap';\n\nfunction Navigation(props) {\n  return (\n    <div>\n      \n        <Navbar expand=\"lg\" className=\"bg-light px-5 shadow-sm\">\n\n          <Nav className=\"mr-auto\">\n            <Nav >\n              <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n                <img src={logo} alt=\"\" width=\"100px\" />\n              </Link>\n            </Nav>\n          </Nav>\n          <Button href=\"https://eupry.com/logger\" target=\"_blank\" rel=\"noopener noreferrer\"> Eupry Logger <ExternalLink size={16} /></Button>\n\n        </Navbar>\n      \n\n    </div>\n  );\n}\n\nexport default withRouter(Navigation);\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <footer class=\"py-3 bg-dark fixed-bottom\">\n        <div class=\"container\">\n          <p class=\"m-0 text-center text-white\">\n            Copyright &copy; Eupry 2021\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","//let url = \"http://35.231.114.250:1880\";\n// let url = \"http://127.0.0.1:1880\";\nlet url = \"https://betatest.eupry.com\";\nexport { url };\n","import React from \"react\";\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\n\nimport { Row, Col, Button, Breadcrumb, Container } from \"react-bootstrap\"\n\nimport { url } from \"../static/url.js\"\n\nclass App extends React.Component {\n\n  handleClick = () => {\n    console.log(this.state)\n  }\n\n  state = {\n    ID: null,\n    data: []\n  }\n\n  componentDidMount() {\n    if (typeof window !== `undefined` && localStorage.getItem('ID')) {\n      this.setState({\n        ID: localStorage.getItem('ID'),\n      }, () => {\n        this.getData();\n      });\n    } else (\n      this.props.history.push('/login')\n    );\n  }\n\n  getData = () => {\n\n    let URL = url;\n    URL = URL + \"/api/forward?api=loc&id=\" + this.state.ID;\n    axios.get(URL)\n      .then(res => {\n        this.setState({\n          data: res.data\n        })\n      })\n      .catch(error => {\n        console.log(\"Error\")\n        this.props.history.push(\"/login/\")\n      })\n  }\n\n  render() {\n    const locations = this.state.data;\n    const locationRender = [];\n    for (let location of locations) {\n      locationRender.push(\n        <Col className=\"col-auto mb-3\" key={\"locationRender\" + location.id}>\n          <Button variant=\"light\" type=\"submit\" onClick={() => { this.props.history.push(\"/location?\" + location.id) }} className=\"p-4 shadow-sm buttonCard\">\n            {location.name}\n          </Button>\n        </Col>\n      );\n    }\n    return (\n      <Container>\n          <Breadcrumb>\n            <Breadcrumb.Item active>Locations </Breadcrumb.Item>\n          </Breadcrumb>\n\n          <Row className=\"justify-content-md-center\">\n            <Row className=\"justify-content-md-left\">{locationRender}</Row>\n          </Row>\n      </Container>\n    )\n  }\n}\n\nconst AppWithRouter = withRouter(App);\nexport default AppWithRouter;","import React from \"react\";\nimport { withRouter } from 'react-router';\n\nimport axios from 'axios';\nimport { Card, Row, Col, Button, Breadcrumb, Container } from \"react-bootstrap\"\n\nimport { url } from \"../static/url.js\"\n\nclass App extends React.Component {\n\n  state = {\n    ID: null,\n    data: []\n  }\n\n  componentDidMount() {\n    if (typeof window !== `undefined` && localStorage.getItem('ID')) {\n      this.setState({\n        ID: localStorage.getItem('ID'),\n      }, () => {\n        this.getData()\n      });\n    } else (\n      this.props.history.push(\"/login/\")\n    );\n  }\n\n  getData = () => {\n    let loc = window.location.href;\n    loc = loc.split(\"?\")[1];\n    this.setState({\n      loc: loc\n    });\n\n    let URL = url;\n    let profileURL = URL + \"/api/forward?api=loc/\" + loc + \"/pro&id=\" + this.state.ID;\n    let locationURL = URL + \"/api/forward?api=loc/\" + loc + \"&id=\" + this.state.ID;\n\n    axios.get(profileURL)\n      .then(res => {\n        this.setState({\n          data: res.data\n        });\n      })\n      .catch(error => {\n        this.props.history.push(\"/login/\")\n      }\n      );\n\n    axios.get(locationURL)\n      .then(res => {\n        this.setState({\n          locName: res.data.name\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      });\n  }\n\n  handleClick = () => {\n    console.log(this.state)\n  }\n\n  render() {\n    const profiles = this.state.data;\n    const profileRender = [];\n    for (let profile of profiles) {\n      profileRender.push(\n        <Col className=\"col-auto mb-3\" key={\"profileRender\" + profile.id}>\n          <Button variant=\"light\" type=\"submit\" onClick={() => { this.props.history.push(\"/profile?loc=\" + this.state.loc + \"&pro=\" + profile.id) }} className=\"p-4 shadow-sm buttonCard\">\n            {profile.name}\n          </Button>\n        </Col>\n      );\n    }\n    return (\n      <Container>\n        <Breadcrumb>\n          <Breadcrumb.Item onClick={() => { this.props.history.push(\"/\") }}> Locations </Breadcrumb.Item>\n          <Breadcrumb.Item active> {this.state.locName} </Breadcrumb.Item>\n        </Breadcrumb>\n\n        <div className={this.state.ID ? \"d-none \" : \"d-inline\"}>\n          <Row className=\"justify-content-md-center\">\n            <Card className=\"text-center\" style={{ width: '18rem' }}>\n              <Card.Header>Not logged in</Card.Header>\n            </Card>\n          </Row>\n        </div>\n        <div className={this.state.ID ? \"d-inline \" : \"d-none\"}>\n          <div>\n            <Row className=\"justify-content-md-center\">\n              <Row className=\"justify-content-md-left\">{profileRender}</Row>\n            </Row>\n          </div>\n        </div>\n      </Container>\n    )\n  }\n}\n\nconst AppWithRouter = withRouter(App);\nexport default AppWithRouter;","import React from \"react\";\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\n\nimport { Form, Button, Card, Container, Row } from 'react-bootstrap'\n\nimport { url } from \"../static/url.js\"\n\nclass App extends React.Component {\n\n    state = {\n        email: \"\",\n        password: \"\",\n        login: false,\n        id: 0,\n    }\n\n    handleInputChange = event => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n        this.setState({\n            [name]: value,\n        })\n    }\n    handleSubmit = event => {\n        event.preventDefault()\n        let URL = url;\n\n        URL = URL + \"/api/login?email=\" + this.state.email + \"&password=\" + this.state.password;\n        axios.get(URL)\n        .then(res => {\n            const data = res.data;\n            this.setState({\n                login: true,\n                ID: data.id,\n              })\n              localStorage.setItem('ID', data.id);\n              \n              this.props.history.push('/');\n        })\n        .catch(error => {\n            console.log(error)\n            alert(\"Wrong login or password\")\n        })\n\n        console.log(\"loginComp.js -> handleSubmit(): \" + URL)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row className=\" mt-5 justify-content-md-center\">\n                        <Card className=\"text-left\" style={{ width: '18rem' }}>\n                            <Card.Body>\n                                <Card.Title>Login</Card.Title>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"formBasicEmail\">\n                                        <Form.Label>Email address</Form.Label>\n                                        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} />\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"formBasicPassword\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} />\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Submit\n                                    </Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst AppWithRouter = withRouter(App);\nexport default AppWithRouter;","import React, { Component, forwardRef } from 'react'\nimport { Row, Button} from 'react-bootstrap'\nimport moment from 'moment'\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nexport default class DatepickerComponent extends Component {\n    state = {\n        focused: null,\n    }\n\n    handleClick = () => {\n        console.log(this.props)\n        console.log(this.state)\n    }\n\n    changeDate = (amount, unit) => {\n        this.props.handler(this.props.time.end.add(amount, unit), this.props.time.start.add(amount, unit))\n    }\n\n    handleChange = event => {\n        let dayshift = moment(event).diff(this.props.time.start, 'days');\n        this.changeDate(dayshift, 'days')\n    }\n\n    render() {\n        const ref = React.createRef()\n        const CustomDateInput = forwardRef(({ onClick, value }, ref) => (\n            <Button variant=\"link\" onClick={onClick} value={value} onChange={onClick} ref={ref} className=\"text-dark\">\n                {this.props.time.start.format('dddd')} <br />\n                {this.props.time.start.format('MMMM DD YYYY')}\n            </Button>\n        //   <input onClick={onClick} value={value} onChange={onClick} ref={ref} />\n        ))\n\n        return (\n            <div>\n                    {/* <Button onClick={this.handleClick}>this.state :) </Button> */}\n                    <Row className=\"mb-3 justify-content-md-center\">\n                        \n                            <Button onClick={() => this.changeDate(-1, \"days\")} className=\"text-dark\" variant=\"link\" >ᐸ</Button>\n                            {/* <span className=\"mx-3\">\n                                {this.props.time.start.format('dddd')} <br />\n                                {this.props.time.start.format('MMMM DD YYYY')}\n                            </span> */}\n                            <DatePicker\n                                selected={this.props.time.start.valueOf()}\n                                onChange={this.handleChange}\n                                customInput={<CustomDateInput ref={ref} />}\n                                filterDate = {(date) => {\n                                    return moment() > date;\n                                  }}\n                            />\n\n                            <Button onClick={() => this.changeDate(1, \"days\")} className={!this.props.time.start.isSame(moment(), 'day') ? \"text-dark\" : \"invisible\"} variant=\"link\" >ᐳ</Button>\n                    </Row>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\nimport equal from 'fast-deep-equal';\nimport { Row, Col, Card } from \"react-bootstrap\"\n\n// eslint-disable-next-line\nimport { Button } from \"react-bootstrap\"\n\n\nclass App extends React.Component {\n    handleClick = () => {\n        console.log(this.state)\n    }\n\n    componentDidMount() {\n        if (this.props.mgraph.status !== \"ok\") {\n            this.generateAxis(this.props.mgraph)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!equal(this.props, prevProps)) {\n            this.generateAxis(this.props.mgraph)\n        }\n\n    }\n\n    generateAxis = (data) => {\n        // push series\n        let series = [];\n\n        for (const [key, device] of Object.entries(data.devices)) {\n\n            let temperature = [];\n            let probe = [];\n            let humidity = [];\n\n            // push temp\n            for (const [j, temp] of device.v.entries()) {\n                if (temp) { temperature.push({ x: data.time[j] * 1000, y: temp }) }\n            }\n            if (temperature.length > 0) {\n                series.push(\n                    {\n                        device_name: device.name,\n                        device_id: device.device_id,\n                        shadow_id: parseInt(key),\n                        min: device.min_v,\n                        max: device.max_v,\n                        mean: device.mean_v,\n                        source: \"temperature\",\n                        data: temperature\n                    }\n                )\n            }\n\n            // push probe\n            for (const [j, ext] of device.p.entries()) {\n                if (ext) { probe.push({ x: data.time[j] * 1000, y: ext }) }\n            }\n            if (probe.length > 0) {\n                series.push(\n                    {\n                        device_name: device.name,\n                        device_id: device.device_id,\n                        shadow_id: parseInt(key),\n                        min: device.min_p,\n                        max: device.max_p,\n                        mean: device.mean_p,\n                        source: \"external\",\n                        data: probe\n                    }\n                )\n            }\n\n            // push humidity\n            for (const [j, humid] of device.h.entries()) {\n                if (humid) { humidity.push({ x: data.time[j] * 1000, y: humid }) }\n            }\n            if (humidity.length > 0) {\n                series.push(\n                    {\n                        device_name: device.name,\n                        device_id: device.device_id,\n                        shadow_id: parseInt(key),\n                        min: device.min_h,\n                        max: device.max_h,\n                        mean: device.mean_h,\n                        source: \"humidity\",\n                        data: humidity\n                    }\n                )\n            }\n        }\n\n        // now sort based on settings\n        let sortedSeries = { normal: [], CO2: [], humidity: [] };\n        if (this.props.status) {\n            for (const shadow of this.props.status) {\n                if (shadow.type === \"normal\") {\n                    for (const serie of series) {\n                        if (shadow.shadow_id === serie.shadow_id) {\n                            if (serie.source === \"temperature\") {\n                                sortedSeries.normal.push(serie)\n                            }\n                            if (serie.source === \"external\") {\n                                sortedSeries.normal.push(serie)\n                            }\n                            if (serie.source === \"humidity\") {\n                                sortedSeries.humidity.push(serie)\n                            }\n                        }\n                    }\n                }\n                if (shadow.type === \"humidity\") {\n                    for (const serie of series) {\n                        if (shadow.shadow_id === serie.shadow_id) {\n                            if (serie.source === \"temperature\") {\n                                sortedSeries.normal.push(serie)\n                            }\n                            if (serie.source === \"external\") {\n                                sortedSeries.humidity.push(serie)\n                            }\n                            if (serie.source === \"humidity\") {\n                                sortedSeries.humidity.push(serie)\n                            }\n                        }\n                    }\n                }\n                if (shadow.type === \"CO2\") {\n                    for (const serie of series) {\n                        if (shadow.shadow_id === serie.shadow_id) {\n                            if (serie.source === \"temperature\") {\n                                sortedSeries.normal.push(serie)\n                            }\n                            if (serie.source === \"external\") {\n                                sortedSeries.CO2.push(serie)\n                            }\n                            if (serie.source === \"humidity\") {\n                                sortedSeries.humidity.push(serie)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.setState({\n            series: series,\n            sortedSeries: sortedSeries\n        })\n    }\n\n\n    state = {\n        normal: {\n            options: {\n                chart: {\n                    animations: {\n                        enabled: false,\n                        easing: 'easeinout',\n                        speed: 800,\n                        animateGradually: {\n                            enabled: false,\n                            delay: 150\n                        },\n                        dynamicAnimation: {\n                            enabled: false,\n                            speed: 350\n                        },\n                        initialAnimation: {\n                            enabled: false\n                        },\n                    },\n                    height: 380,\n                    width: \"100%\",\n                    toolbar: {\n                        show: true,\n                        tools: {\n                            selection: false,\n                            zoom: false,\n                            pan: false,\n                            zoomin: false,\n                            zoomout: false,\n                            reset: false,\n                        }\n                    }\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        datetimeUTC: false\n                    },\n                    tooltip: {\n                        enabled: false\n                    }\n                },\n                stroke: {\n                    width: 3,\n                    curve: 'smooth',\n                },\n                legend: {\n                    show: false\n                },\n                tooltip: {\n                    x: {\n                        format: 'dddd MMM dd HH:mm'\n                    },\n                    y: {\n                        title: {\n                            formatter: (seriesName, object) => this.state.series[object.seriesIndex].device_name,\n                        },\n                    }\n                }\n            }\n        },\n        CO2: {\n            options: {\n                chart: {\n                    animations: {\n                        enabled: false,\n                        easing: 'easeinout',\n                        speed: 800,\n                        animateGradually: {\n                            enabled: false,\n                            delay: 150\n                        },\n                        dynamicAnimation: {\n                            enabled: false,\n                            speed: 350\n                        },\n                        initialAnimation: {\n                            enabled: false\n                        },\n                    },\n                    height: 380,\n                    width: \"100%\",\n                    toolbar: {\n                        show: true,\n                        tools: {\n                            selection: false,\n                            zoom: false,\n                            pan: false,\n                            zoomin: false,\n                            zoomout: false,\n                            reset: false,\n                        }\n                    }\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        datetimeUTC: false\n                    },\n                    tooltip: {\n                        enabled: false\n                    }\n                },\n                yaxis: {\n                    labels: {\n                        formatter: (value) => {\n                            return parseFloat(value.toFixed(1)) + \" %\"\n                        }\n                    },\n                },\n                stroke: {\n                    width: 3,\n                    curve: 'smooth',\n                },\n                legend: {\n                    show: false\n                },\n                tooltip: {\n                    x: {\n                        format: 'dddd MMM dd HH:mm'\n                    },\n                    y: {\n                        title: {\n                            formatter: (seriesName, object) => this.props.graph.CO2[object.seriesIndex].device_name,\n                        },\n                    }\n                }\n            }\n        },\n        diffPressure: {\n            options: {\n                chart: {\n                    animations: {\n                        enabled: false,\n                        easing: 'easeinout',\n                        speed: 800,\n                        animateGradually: {\n                            enabled: false,\n                            delay: 150\n                        },\n                        dynamicAnimation: {\n                            enabled: false,\n                            speed: 350\n                        },\n                        initialAnimation: {\n                            enabled: false\n                        },\n                    },\n                    height: 380,\n                    width: \"100%\",\n                    toolbar: {\n                        show: true,\n                        tools: {\n                            selection: false,\n                            zoom: false,\n                            pan: false,\n                            zoomin: false,\n                            zoomout: false,\n                            reset: false,\n                        }\n                    }\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        datetimeUTC: false\n                    },\n                    tooltip: {\n                        enabled: false\n                    }\n                },\n                yaxis: {\n                    labels: {\n                        formatter: (value) => {\n                            return parseFloat(value.toFixed(1)) + \" Pa\"\n                        }\n                    },\n                },\n                stroke: {\n                    width: 3,\n                    curve: 'smooth',\n                },\n                legend: {\n                    show: false\n                },\n                tooltip: {\n                    x: {\n                        format: 'dddd MMM dd HH:mm'\n                    },\n                    y: {\n                        title: {\n                            formatter: (seriesName, object) => this.props.data.graph[object.seriesIndex].device_name,\n                        },\n                    }\n                }\n            }\n        }\n    };\n\n    render() {\n        return (\n            <Row>\n                {/* <Button onClick={this.handleClick}>this.state :) </Button> */}\n\n                <Col lg={12} className={this.state.sortedSeries && this.state.sortedSeries.normal.length > 0 ? null : 'hidden'}>\n                    <Card className=\"mb-3\">\n                        <Card.Header>Temperature </Card.Header>\n                        <Card.Body>\n\n                            {this.state.sortedSeries ? <Chart options={this.state.normal.options} series={this.state.sortedSeries.normal} height={200} /> : null}\n                        </Card.Body>\n\n                    </Card>\n                </Col>\n\n\n                <Col lg={12} className={this.state.sortedSeries && this.state.sortedSeries.CO2.length > 0 ? null : 'hidden'}>\n                    <Card className=\"mb-3\">\n                        <Card.Header>CO2 </Card.Header>\n                        <Card.Body>\n                            {this.state.sortedSeries ? <Chart options={this.state.normal.options} series={this.state.sortedSeries.CO2} height={200} /> : null}\n                        </Card.Body>\n\n                    </Card>\n                </Col>\n                <Col lg={12} className={this.state.sortedSeries && this.state.sortedSeries.humidity.length > 0 ? null : 'hidden'}>\n                    <Card className=\"mb-3\">\n                        <Card.Header>Humidity </Card.Header>\n                        <Card.Body>\n                            {this.state.sortedSeries ? <Chart options={this.state.normal.options} series={this.state.sortedSeries.humidity} height={200} /> : null}\n                        </Card.Body>\n\n                    </Card>\n                </Col>\n\n            </Row >\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { Button, Popover, OverlayTrigger, Table } from \"react-bootstrap\"\nimport { Settings } from 'react-feather';\nimport axios from 'axios';\nimport equal from 'fast-deep-equal';\n\nimport { url } from \"../static/url.js\"\n\nexport default class SettingsButton extends Component {\n\n    state = {\n        shadows: {}\n    }\n\n    componentDidMount() {\n        this.loadSettings()\n    }\n\n    setSettings = (shadow) => {\n        let checks = { normal: true, CO2: false, humidity: false };\n        this.setState({\n            shadows: {\n                ...this.state.shadows,\n                [shadow]: checks\n            }\n        })\n    }\n\n    loadSettings = () => {\n        for (const shadow of this.props.status) {\n            let getUrl = url + \"/api/getsettings?loc=\" + this.props.loc + \"&pro= \" + this.props.pro + \"&shadow=\" + shadow.shadow_id\n            axios.get(getUrl)\n                .then(res => {\n                    if (res.data.length === 0) {\n                        this.setSettings(shadow.shadow_id)\n                    } else {\n                        const parsedData = JSON.parse(res.data.replaceAll(\"/\", \"\\\"\"))\n                        this.props.handler(shadow.shadow_id, parsedData);\n                        this.setState({\n                            shadows: {\n                                ...this.state.shadows,\n                                [shadow.shadow_id]: parsedData\n                            }\n                        })\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                });\n        }\n\n\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!equal(this.props, prevProps)) {\n            this.loadSettings()\n        }\n    }\n\n    handleUnitCheckboxes = (shadow_id, type) => {\n        const newCheckState = !this.state.shadows[shadow_id][type];\n        const stateChange = this.state.shadows[shadow_id];\n\n        stateChange[type] = newCheckState;\n\n        let types = Object.keys(stateChange);\n        if (newCheckState === true) {\n            for (let crawlType of types) {\n                if (crawlType !== type) {\n                    stateChange[crawlType] = false;\n                }\n            }\n        } else {\n            stateChange.normal = true;\n        }\n\n        if (type === \"normal\" && newCheckState === false) {\n            // Do nothhing :) \n        } else {\n            let getUrl = url + \"/api/setin\" +\n                \"?loc=\" + this.props.loc +\n                \"&pro=\" + this.props.pro +\n                \"&shadow=\" + shadow_id +\n                \"&data=\" + JSON.stringify(stateChange);\n\n            axios.get(getUrl)\n                .then(res => {\n                    this.props.handler(shadow_id, stateChange);\n                    this.setState({\n                        shadows: {\n                            ...this.state.shadows,\n                            [shadow_id]: stateChange\n                        }\n                    })\n                })\n                .catch(error => {\n                    console.log(error)\n                });\n        }\n    }\n\n    handleClick = () => {\n        console.log(this.state)\n    }\n\n    collectDataloggers = () => {\n        if (this.state.shadows) {\n            return this.props.status.map((datalogger, index) => {\n                return (\n                    <tr key={\"settingsButton\" + datalogger.shadow_id}>\n                        <td>{datalogger.device_name}</td>\n                        {!this.state.shadows[datalogger.shadow_id] ? null : <td><input type='checkbox' checked={this.state.shadows[datalogger.shadow_id].normal} id={datalogger.device_name + \"_normal\"} onChange={event => this.handleUnitCheckboxes(datalogger.shadow_id, \"normal\")} /></td>}\n                        {!this.state.shadows[datalogger.shadow_id] ? null : <td><input type='checkbox' checked={this.state.shadows[datalogger.shadow_id].humidity} id={datalogger.device_name + \"humidity\"} onChange={event => this.handleUnitCheckboxes(datalogger.shadow_id, \"humidity\")} /></td>}\n                        {!this.state.shadows[datalogger.shadow_id] ? null : <td><input type='checkbox' checked={this.state.shadows[datalogger.shadow_id].CO2} id={datalogger.device_name + \"_CO2\"} onChange={event => this.handleUnitCheckboxes(datalogger.shadow_id, \"CO2\")} /></td>}\n                    </tr>\n                )\n            })\n        }\n\n    }\n\n\n    render() {\n        const popover = (\n            <Popover id=\"popover-basic\" width={400}>\n                <Popover.Title as=\"h3\">Settings</Popover.Title>\n                <Popover.Content>\n                    <Table striped className=\"text-center\">\n                        <thead>\n                            <tr>\n                                <th>Logger</th>\n                                <th>Temperature</th>\n                                <th>Humidity</th>\n                                <th>CO2</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.collectDataloggers()}\n                        </tbody>\n                    </Table>\n                </Popover.Content>\n            </Popover>\n        );\n\n        return (\n            <span>\n\n                {/* <Button onClick={this.handleClick}>Settings state</Button> */}\n\n                <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                    <Button variant=\"link\"><Settings size={18} /></Button>\n                </OverlayTrigger>\n\n\n\n                {/* {this.state.detection} */}\n\n            </span>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Button, Popover, OverlayTrigger, Table } from \"react-bootstrap\"\nimport { Bell } from 'react-feather';\n// eslint-disable-next-line\nimport axios from 'axios';\nimport qs from 'qs'\n\nimport equal from 'fast-deep-equal/es6/react';\n// eslint-disable-next-line\nimport { url } from \"../static/url.js\"\n\nexport default class alarmConfig extends Component {\n\n    state = {\n    }\n\n    componentDidMount() {\n        this.loadSettings()\n    }\n\n    loadSettings = () => {\n        let types = [];\n        for (const shadow of this.props.status) {\n            let config = shadow.configuration;\n            config.shadow_id = shadow.shadow_id;\n\n            config.type = shadow.type;\n\n            config.device_name = shadow.device_name;\n            types.push(shadow.type)\n            this.setState({\n                [shadow.shadow_id]: config,\n            })\n        }\n\n        this.setState({\n            types: types\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!equal(this.props, prevProps)) {\n            this.loadSettings()\n        }\n    }\n\n    setSettings = () => {\n        Object.values(this.state).forEach(shadow => {\n            let getUrl = url + \"/api/setconfig/\" +\n                this.props.loc +\n                \"/\" + this.props.pro +\n                \"/\" + shadow.shadow_id +\n                \"/\" + this.props.id\n\n            axios({\n                method: 'post',\n                url: getUrl,\n                data: qs.stringify(shadow),\n                headers: {\n                    'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n                }\n            })\n                .then(res => {\n                    const data = res.data;\n                    console.log(data)\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.props.history.push(\"/login/\")\n                });\n\n        });\n    }\n\n\n    handleChange = (event) => {\n        const shadow = event.target.attributes.shadow.value;\n        const value = event.target.value;\n        // const unit = event.target.attributes.alarmunit.value;\n        const type = event.target.attributes.alarmtype.value;\n\n        this.setState({\n            [shadow]: {\n                ...this.state[shadow],\n                [type]: value\n            }\n        })\n    }\n\n\n\n    handleClick = () => {\n        console.log(this.state)\n    }\n\n\n    render() {\n        const shadows = this.state;\n        const alarmRender = {\n            temp: [],\n            hum: [],\n            CO2: []\n        };\n\n        Object.values(shadows).forEach(shadow => {\n            if (shadow.type === \"normal\" || shadow.type === \"humidity\") {\n                alarmRender.temp.push(\n                    <tr key={\"alarmconfigTemp\" + shadow.shadow_id}>\n                        <td>{shadow.device_name}</td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"temp\" alarmtype=\"crit_high\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].crit_high} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"temp\" alarmtype=\"high\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].high} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"temp\" alarmtype=\"crit_low\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].crit_low} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"temp\" alarmtype=\"low\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].low} /></td>\n                    </tr>\n                );\n            }\n            if (shadow.type === \"humidity\" || shadow.type === \"CO2\") {\n                alarmRender.hum.push(\n                    <tr key={\"alarmconfigHum\" + shadow.shadow_id}>\n                        <td>{shadow.device_name}</td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"hum\" alarmtype=\"humid_crit_high\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].humid_crit_high} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"hum\" alarmtype=\"humid_high\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].humid_high} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"hum\" alarmtype=\"humid_crit_low\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].humid_crit_low} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"hum\" alarmtype=\"humid_low\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].humid_low} /></td>\n                    </tr>\n                );\n            }\n            if (shadow.type === \"CO2\") {\n                alarmRender.CO2.push(\n                    <tr key={\"alarmconfigCO2\" + shadow.shadow_id}>\n                        <td>{shadow.device_name}</td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"CO2\" alarmtype=\"crit_high\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].crit_high} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"CO2\" alarmtype=\"high\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].high} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"CO2\" alarmtype=\"crit_low\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].crit_low} /></td>\n                        <td><input shadow={shadow.shadow_id} alarmunit=\"CO2\" alarmtype=\"low\" onChange={this.handleChange} className=\"alarmInput\" type=\"text\" value={this.state[shadow.shadow_id].low} /></td>\n                    </tr>\n                );\n            }\n        });\n\n\n        const popover = (\n            <Popover id=\"popover-basic\" width={400}>\n                <Popover.Title as=\"h3\">Alarm configuration</Popover.Title>\n                <Popover.Content>\n                    <Table striped className=\"text-center\">\n                        <thead>\n                            <tr>\n                                <th colSpan=\"5\">Temperatur</th>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td>Critical High</td>\n                                <td>High</td>\n                                <td>Critical Low</td>\n                                <td>Low</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {alarmRender.temp}\n                        </tbody>\n\n                        <thead className={this.state.types && this.state.types.includes(\"humidity\") ? null : 'hidden'}> \n                            <tr>\n                                <th colSpan=\"5\">Humidity</th>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td>Critical High</td>\n                                <td>High</td>\n                                <td>Critical Low</td>\n                                <td>Low</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {alarmRender.hum}\n                        </tbody>\n                        <thead className={this.state.types && this.state.types.includes(\"CO2\") ? null : 'hidden'}>\n                            <tr>\n                                <th colSpan=\"5\">CO2</th>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td>Critical High</td>\n                                <td>High</td>\n                                <td>Critical Low</td>\n                                <td>Low</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {alarmRender.CO2}\n                        </tbody>\n                    </Table>\n                    <Button onClick={this.setSettings}>Submit</Button>\n                </Popover.Content>\n            </Popover>\n        );\n\n        return (\n            <span>\n\n                {/* <Button onClick={this.handleClick}>Settings state</Button> */}\n\n\n                <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                    <Button variant=\"link\"><Bell size={18} /></Button>\n                </OverlayTrigger>\n            </span>\n        )\n    }\n}","import React from \"react\";\nimport { url } from \"../static/url.js\"\n\nimport moment from 'moment';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\n\nimport { Breadcrumb, Col, Row, Container } from \"react-bootstrap\"\n// eslint-disable-next-line\nimport { Button } from \"react-bootstrap\"\n\nimport DatepickerComponent from \"../components/datepicker\";\nimport Linechart from \"../components/linechart\";\nimport SettingsButton from \"../components/settingsButton\"\nimport AlarmConfig from \"../components/alarmConfig\"\n\n\nclass App extends React.Component {\n    state = {\n        time: {\n            start: moment().hours(0).minutes(0).seconds(0),\n            end: moment().hours(0).minutes(0).seconds(0).add(24, 'hours')\n        },\n        updater: 0,\n        empty: true\n    }\n\n    handleClick = () => {\n        console.log(this.state)\n    }\n\n    componentDidMount() {\n        if (typeof window !== `undefined` && localStorage.getItem('ID')) {\n            this.setState({\n                ID: localStorage.getItem('ID'),\n            }, () => {\n                this.getData();\n\n            })\n        } else (\n            this.props.history.push(\"/login/\")\n        )\n    }\n\n    getData = () => {\n        let query = window.location.href;\n        query = query.split(\"?\")[1];\n        let loc = query.split(\"&\")[0].split(\"=\")[1];\n        let pro = query.split(\"&\")[1].split(\"=\")[1];\n\n        this.setState({\n            updater: this.state.updater+1,\n            loc: loc,\n            pro: pro\n        });\n\n        const retrieveUrls = {\n            locName: url + \"/api/forward?api=loc/\" + loc + \"&id=\" + this.state.ID,\n            proName: url + \"/api/forward?api=loc/\" + loc + \"/pro/\" + pro + \"&id=\" + this.state.ID,\n            alert: url + \"/api/forward?api=loc/\" + loc + \"/pro/\" + pro + \"/alert?start=\" + this.state.time.start.unix() + \"&end=\" + this.state.time.end.unix() + \"&id=\" + this.state.ID,\n            config: url + \"/api/forward?api=loc/\" + loc + \"/pro/\" + pro + \"/config?start=\" + this.state.time.start.unix() + \"&end=\" + this.state.time.end.unix() + \"&id=\" + this.state.ID,\n            status: url + \"/api/forward?api=loc/\" + loc + \"/pro/\" + pro + \"/status?start=\" + this.state.time.start.unix() + \"&end=\" + this.state.time.end.unix() + \"&id=\" + this.state.ID,\n            button: url + \"/api/forward?api=loc/\" + loc + \"/pro/\" + pro + \"/button?start=\" + this.state.time.start.unix() + \"&end=\" + this.state.time.end.unix() + \"&id=\" + this.state.ID,\n            mgraph: url + \"/api/forward?api=loc/\" + loc + \"/pro/\" + pro + \"/mgraph?res=30&start=\" + this.state.time.start.unix() + \"&end=\" + this.state.time.end.unix() + \"&id=\" + this.state.ID,\n        }\n\n        for (const key in retrieveUrls) {\n            axios.get(retrieveUrls[key])\n                .then(res => {\n                    const data = res.data;\n                    this.setState({\n                        [key]: data\n                    }, () => {\n                        if (key === \"status\") {\n                            this.nextUpload(data)\n                            for (let shadow of data) {\n                                shadow.type = \"normal\" //set all as normal by default should be a back-end thing but you know ;) \n                            }\n\n                            if (data.length > 0) {\n                                this.setState({\n                                    updater: this.state.updater+1,\n                                    empty: false\n                                })\n                            }\n                         }\n                    });\n\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.props.history.push(\"/login/\")\n                });\n        }\n\n    }\n\n    dateHandler = (end, start) => {\n        this.setState({\n            time: {\n                start: start,\n                end: end\n            }\n        }, () => {\n            this.getData();\n        })\n    }\n\n    settingsHandler = (shadow_id, settings) => {\n        let status = this.state.status;\n        let types = Object.keys(settings);\n        let type = \"normal\";\n\n        for (let thisType of types) {\n            if (settings[thisType]) {\n                type = thisType\n            }\n        }\n        \n\n        for (let i in status) {\n            if (status[i].shadow_id === shadow_id) {\n                status[i].type = type\n            }\n        }\n\n        this.setState({\n            status: status,\n            updater: this.state.updater+1,\n        })\n    }\n\n    nextUpload = (data) => {\n        let nextupload = Infinity;\n\n        for (const device of data) {\n            if (device.next_update < nextupload) {\n                nextupload = device.next_update;\n            }\n        }\n\n        this.setState({\n            nextupload: moment.unix(nextupload).fromNow()\n        })\n\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <Breadcrumb>\n                            <Breadcrumb.Item onClick={() => { this.props.history.push(\"/\") }}> Locations </Breadcrumb.Item>\n                            {this.state.locName ? <Breadcrumb.Item onClick={() => { this.props.history.push(\"/location?\" + this.state.loc) }}> {this.state.locName.name} </Breadcrumb.Item> : null}\n                            {this.state.proName ? <Breadcrumb.Item active> {this.state.proName.name} </Breadcrumb.Item> : null}\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <DatepickerComponent handler={this.dateHandler} time={this.state.time} />\n                        <small className=\"float-sm-right\">\n                            Next upload {this.state.nextupload}  or <b>on alarm</b>\n\n                            {this.state.loc && this.state.pro && this.state.status ? <SettingsButton loc={this.state.loc} pro={this.state.pro} status={this.state.status} handler={this.settingsHandler} /> : null}\n                            {this.state.status ? <AlarmConfig id={this.state.ID} loc={this.state.loc} pro={this.state.pro} updater = {this.state.updater} status={this.state.status} /> : null}\n\n                        </small>\n                    </Col>\n                </Row>\n\n                {this.state.mgraph && this.state.empty !== true ? <Linechart mgraph={this.state.mgraph} status={this.state.status} time={this.state.time} updater = {this.state.updater} /> : \"No connected data logger in rofile\"}\n                {/* <Button onClick={this.handleClick}>Profile.jsx state</Button> */}\n            </Container>\n        );\n    }\n}\n\nconst AppWithRouter = withRouter(App);\nexport default AppWithRouter;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation, Location, Locations, Login, Profile} from \"./components\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route path=\"/\" exact component={() => <Locations />} />\n          <Route path=\"/login\" exact component={() => <Login />} />\n          <Route path=\"/location\" exact component={() => <Location />} />\n          <Route path=\"/profile\" exact component={() => <Profile />} />\n        </Switch>\n        {/* <Footer /> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}